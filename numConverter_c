/*******************************
 *	Author: Isaac Hirzel
 *	Team H: Nicole Weber, Jennifer Lopez, Kyle Dillbeck, Isaac Hirzel
 *	CST237 Project C prototype
 *
 *******************************/

#include <stdio.h>
#include <string.h>

const char* conv_vals = "0123456789ABCDEF";

int base_to_int(const char* input, unsigned base)
{
	int output = 0;
	int len = strlen(input);
	const char *pos = input;
	while (*pos)
	{
		int val = 0;
		const char *v  = conv_vals;
		while (*v)
		{
			if (*v == *pos)
			{
				break;
			}
			val++;
			v++;
		}
		int ba = 1;
		for (int i = 0; i < len - 1; i++)
		{
			ba *= base;
		}

		output += val * ba; 

		len--;
		pos++;
	}
	return output;
}

void print_int_to_base(int num, int base)
{
	char tmp[128];
	int index = 0;

	while(num > 0)
	{

		tmp[index] = conv_vals[num % base];
		num /= base;
		index++;
	}

	const char *pos = tmp + index -1 ;
	const char* start = tmp;

	while (pos != start - 1)
	{
		putchar(*pos);
		pos--;
	}
	putchar('\n');
}

int main()
{
	int base;
	char buf[128];

	printf("Enter the number to be converted: ");
	scanf("%s", buf);
	printf("Enter the base of this number (max: 16): ");
	scanf("%d", &base);

	int val = base_to_int(buf, base);
	int ob;
	while (1)
	{
		printf("Enter base to convert to (max: 16): ");
		scanf("%d", &ob);
		if(ob < 2) break;
		printf("Output: ");
		print_int_to_base(val, ob);
	}
	return 0;
}
